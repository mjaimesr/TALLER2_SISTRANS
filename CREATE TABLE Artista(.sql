DROP TABLE ARTISTA

CREATE TABLE ARTISTA(
    ID_ARTISTA NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(120) NOT NULL  

);

CREATE SEQUENCE seqIdArtista
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO ARTISTA (ID_ARTISTA, NOMBRE) VALUES (seqIdArtista.NEXTVAL, 'Shakira');
INSERT INTO ARTISTA (ID_ARTISTA, NOMBRE) VALUES (seqIdArtista.NEXTVAL, 'Juanes');
INSERT INTO ARTISTA (ID_ARTISTA, NOMBRE) VALUES (seqIdArtista.NEXTVAL, 'Carlos Vives');
INSERT INTO ARTISTA (ID_ARTISTA, NOMBRE) VALUES (seqIdArtista.NEXTVAL, 'Jbalvin');
INSERT INTO ARTISTA (ID_ARTISTA, NOMBRE) VALUES (seqIdArtista.NEXTVAL, 'Karol G');

SELECT * FROM ARTISTA;



DROP TABLE ALBUM

CREATE TABLE ALBUM(
    ID_ALBUM NUMBER PRIMARY KEY,
    TITULO VARCHAR2(160) NOT NULL,  
    ID_ARTISTA NUMBER NOT NULL

);

CREATE SEQUENCE seqIdAlbum
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO ALBUM (ID_ALBUM, TITULO, ID_ARTISTA) VALUES (seqIdAlbum.NEXTVAL, 'Pies Descalzos', 1);
INSERT INTO ALBUM (ID_ALBUM, TITULO, ID_ARTISTA) VALUES (seqIdAlbum.NEXTVAL, 'Un Día Normal', 2);
INSERT INTO ALBUM (ID_ALBUM, TITULO, ID_ARTISTA) VALUES (seqIdAlbum.NEXTVAL, 'El Amor De Mi Tierra', 3);
INSERT INTO ALBUM (ID_ALBUM, TITULO, ID_ARTISTA) VALUES (seqIdAlbum.NEXTVAL, 'Energía', 4);
INSERT INTO ALBUM (ID_ALBUM, TITULO, ID_ARTISTA) VALUES (seqIdAlbum.NEXTVAL, 'Tropicoqueta', 5);

SELECT * FROM ALBUM;


DROP TABLE CANCION;

CREATE TABLE CANCION(
    ID_CANCION NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(200) NOT NULL,
    COMPOSITOR VARCHAR2(200) NOT NULL,
    MILISEGUNDOS NUMBER NOT NULL,
    BYTES NUMBER NOT NULL,
    PRECIO_UNITARIO NUMBER(10,2) NOT NULL,
    ID_ALBUM NUMBER NOT NULL,
    ID_GENERO NUMBER NOT NULL,
    ID_MEDIO NUMBER NOT NULL
)

CREATE SEQUENCE seqIdCancion
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO CANCION (ID_CANCION, NOMBRE, COMPOSITOR, MILISEGUNDOS, BYTES, PRECIO_UNITARIO, ID_ALBUM, ID_GENERO, ID_MEDIO)
VALUES (seqIdCancion.NEXTVAL, 'Estoy Aquí', 'Shakira', 210000, 5120000, 9.99, 1, 1, 1);

INSERT INTO CANCION (ID_CANCION, NOMBRE, COMPOSITOR, MILISEGUNDOS, BYTES, PRECIO_UNITARIO, ID_ALBUM, ID_GENERO, ID_MEDIO)
VALUES (seqIdCancion.NEXTVAL, 'A Dios le Pido', 'Juanes', 180000, 4890000, 8.50, 2, 2, 2);

INSERT INTO CANCION (ID_CANCION, NOMBRE, COMPOSITOR, MILISEGUNDOS, BYTES, PRECIO_UNITARIO, ID_ALBUM, ID_GENERO, ID_MEDIO)
VALUES (seqIdCancion.NEXTVAL, 'Fruta Fresca', 'Carlos Vives', 240000, 6000000, 10.00, 3, 3, 3);

INSERT INTO CANCION (ID_CANCION, NOMBRE, COMPOSITOR, MILISEGUNDOS, BYTES, PRECIO_UNITARIO, ID_ALBUM, ID_GENERO, ID_MEDIO)
VALUES (seqIdCancion.NEXTVAL, 'Safari', 'J Balvin', 200000, 5500000, 7.99, 4, 4, 4);

INSERT INTO CANCION (ID_CANCION, NOMBRE, COMPOSITOR, MILISEGUNDOS, BYTES, PRECIO_UNITARIO, ID_ALBUM, ID_GENERO, ID_MEDIO)
VALUES (seqIdCancion.NEXTVAL, 'Verano Rosa', 'Karol G', 195000, 5300000, 9.50, 5, 5, 5);


SELECT * FROM CANCION;


DROP TABLE GENERO;

CREATE TABLE GENERO (
    ID_GENERO NUMBER PRIMARY KEY,
    NOMBRE    VARCHAR2(120) NOT NULL
);

CREATE SEQUENCE seqIdGenero
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO GENERO (ID_GENERO, NOMBRE) VALUES (seqIdGenero.NEXTVAL, 'Pop');         
INSERT INTO GENERO (ID_GENERO, NOMBRE) VALUES (seqIdGenero.NEXTVAL, 'Rock Latino');
INSERT INTO GENERO (ID_GENERO, NOMBRE) VALUES (seqIdGenero.NEXTVAL, 'Vallenato');   
INSERT INTO GENERO (ID_GENERO, NOMBRE) VALUES (seqIdGenero.NEXTVAL, 'Reguetón');    
INSERT INTO GENERO (ID_GENERO, NOMBRE) VALUES (seqIdGenero.NEXTVAL, 'Urbano');   

SELECT * FROM GENERO;



DROP TABLE TIPOS_MEDIO;

CREATE TABLE TIPOS_MEDIO (
    ID_MEDIO NUMBER PRIMARY KEY,
    NOMBRE   VARCHAR2(120) NOT NULL
);

CREATE SEQUENCE seqIdMedio
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO TIPOS_MEDIO (ID_MEDIO, NOMBRE) VALUES (seqIdMedio.NEXTVAL, 'MP3');
INSERT INTO TIPOS_MEDIO (ID_MEDIO, NOMBRE) VALUES (seqIdMedio.NEXTVAL, 'AAC');
INSERT INTO TIPOS_MEDIO (ID_MEDIO, NOMBRE) VALUES (seqIdMedio.NEXTVAL, 'FLAC');
INSERT INTO TIPOS_MEDIO (ID_MEDIO, NOMBRE) VALUES (seqIdMedio.NEXTVAL, 'OGG');
INSERT INTO TIPOS_MEDIO (ID_MEDIO, NOMBRE) VALUES (seqIdMedio.NEXTVAL, 'WAV');

SELECT * FROM TIPOS_MEDIO;


DROP TABLE LISTA_REPRODUCCION;

CREATE TABLE LISTA_REPRODUCCION (
    ID_LISTA NUMBER PRIMARY KEY,
    NOMBRE   VARCHAR2(120) NOT NULL
);

CREATE SEQUENCE seqIdLista
START WITH 1 
INCREMENT BY 1
NOCACHE;

INSERT INTO LISTA_REPRODUCCION (ID_LISTA, NOMBRE) VALUES (seqIdLista.NEXTVAL, 'Éxitos del Pop Latino');
INSERT INTO LISTA_REPRODUCCION (ID_LISTA, NOMBRE) VALUES (seqIdLista.NEXTVAL, 'Rock en Español');
INSERT INTO LISTA_REPRODUCCION (ID_LISTA, NOMBRE) VALUES (seqIdLista.NEXTVAL, 'Vallenatos Clásicos');
INSERT INTO LISTA_REPRODUCCION (ID_LISTA, NOMBRE) VALUES (seqIdLista.NEXTVAL, 'Reguetón del Momento');
INSERT INTO LISTA_REPRODUCCION (ID_LISTA, NOMBRE) VALUES (seqIdLista.NEXTVAL, 'Hits Urbanos');

SELECT * FROM LISTA_REPRODUCCION;

ALTER TABLE ALBUM
ADD CONSTRAINT FK_ALBUM_ARTISTA
FOREIGN KEY (ID_ARTISTA) REFERENCES ARTISTA(ID_ARTISTA);

ALTER TABLE CANCION
ADD CONSTRAINT FK_CANCION_ALBUM
FOREIGN KEY (ID_ALBUM) REFERENCES ALBUM(ID_ALBUM);

ALTER TABLE CANCION
ADD CONSTRAINT FK_CANCION_GENERO
FOREIGN KEY (ID_GENERO) REFERENCES GENERO(ID_GENERO);

ALTER TABLE CANCION
ADD CONSTRAINT FK_CANCION_MEDIO
FOREIGN KEY (ID_MEDIO) REFERENCES TIPOS_MEDIO(ID_MEDIO);

ALTER TABLE CANCION_EN_LISTA
ADD CONSTRAINT FK_CANCION_EN_LISTA_LISTA
FOREIGN KEY (ID_LISTA) REFERENCES LISTA_REPRODUCCION(ID_LISTA);

ALTER TABLE CANCION_EN_LISTA
ADD CONSTRAINT FK_CANCION_EN_LISTA_CANCION
FOREIGN KEY (ID_CANCION) REFERENCES CANCION(ID_CANCION);

SELECT LISTA_REPRODUCCION.NOMBRE, SUM(CANCION.PRECIO_UNITARIO) AS PRECIO_TOTAL FROM LISTA_REPRODUCCION  
JOIN CANCION_EN_LISTA ON LISTA_REPRODUCCION.ID_LISTA = CANCION_EN_LISTA.ID_LISTA  
JOIN CANCION ON CANCION_EN_LISTA.ID_CANCION = CANCION.ID_CANCION  
GROUP BY LISTA_REPRODUCCION.NOMBRE ORDER BY PRECIO_TOTAL DESC  
FETCH FIRST 3 ROWS ONLY;

SELECT CANCION.NOMBRE FROM CANCION  
JOIN TIPOS_MEDIO ON CANCION.ID_MEDIO = TIPOS_MEDIO.ID_MEDIO  
WHERE TIPOS_MEDIO.NOMBRE = 'AAC'  
AND CANCION.ID_CANCION NOT IN  
(SELECT CANCION_EN_LISTA.ID_CANCION  
FROM CANCION_EN_LISTA);  

SELECT ARTISTA.NOMBRE, COUNT(ALBUM.ID_ALBUM) AS TOTAL_ALBUMES, AVG (CANCION.PRECIO_UNITARIO) AS PRECIO_PROMEDIO  
FROM ARTISTA 
JOIN ALBUM ON ARTISTA.ID_ARTISTA = ALBUM.ID_ARTISTA 
JOIN CANCION ON ALBUM.ID_ALBUM = CANCION.ID_ALBUM 
GROUP BY ARTISTA.NOMBRE 
HAVING COUNT(ALBUM.ID_ALBUM) > 5 
ORDER BY TOTAL_ALBUMES DESC, PRECIO_PROMEDIO DESC; 